{"ast":null,"code":"var utils = require('./utils');\n\nvar wrapMethod = function (console, level, callback) {\n  var originalConsoleLevel = console[level];\n  var originalConsole = console;\n\n  if (!(level in console)) {\n    return;\n  }\n\n  var sentryLevel = level === 'warn' ? 'warning' : level;\n\n  console[level] = function () {\n    var args = [].slice.call(arguments);\n    var msg = utils.safeJoin(args, ' ');\n    var data = {\n      level: sentryLevel,\n      logger: 'console',\n      extra: {\n        arguments: args\n      }\n    };\n\n    if (level === 'assert') {\n      if (args[0] === false) {\n        // Default browsers message\n        msg = 'Assertion failed: ' + (utils.safeJoin(args.slice(1), ' ') || 'console.assert');\n        data.extra.arguments = args.slice(1);\n        callback && callback(msg, data);\n      }\n    } else {\n      callback && callback(msg, data);\n    } // this fails for some browsers. :(\n\n\n    if (originalConsoleLevel) {\n      // IE9 doesn't allow calling apply on console functions directly\n      // See: https://stackoverflow.com/questions/5472938/does-ie9-support-console-log-and-is-it-a-real-function#answer-5473193\n      Function.prototype.apply.call(originalConsoleLevel, originalConsole, args);\n    }\n  };\n};\n\nmodule.exports = {\n  wrapMethod: wrapMethod\n};","map":{"version":3,"sources":["/Users/melikekilic/vidly/vidly project/node_modules/raven-js/src/console.js"],"names":["utils","require","wrapMethod","console","level","callback","originalConsoleLevel","originalConsole","sentryLevel","args","slice","call","arguments","msg","safeJoin","data","logger","extra","Function","prototype","apply","module","exports"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,SAAD,CAAnB;;AAEA,IAAIC,UAAU,GAAG,UAASC,OAAT,EAAkBC,KAAlB,EAAyBC,QAAzB,EAAmC;AAClD,MAAIC,oBAAoB,GAAGH,OAAO,CAACC,KAAD,CAAlC;AACA,MAAIG,eAAe,GAAGJ,OAAtB;;AAEA,MAAI,EAAEC,KAAK,IAAID,OAAX,CAAJ,EAAyB;AACvB;AACD;;AAED,MAAIK,WAAW,GAAGJ,KAAK,KAAK,MAAV,GAAmB,SAAnB,GAA+BA,KAAjD;;AAEAD,EAAAA,OAAO,CAACC,KAAD,CAAP,GAAiB,YAAW;AAC1B,QAAIK,IAAI,GAAG,GAAGC,KAAH,CAASC,IAAT,CAAcC,SAAd,CAAX;AAEA,QAAIC,GAAG,GAAGb,KAAK,CAACc,QAAN,CAAeL,IAAf,EAAqB,GAArB,CAAV;AACA,QAAIM,IAAI,GAAG;AAACX,MAAAA,KAAK,EAAEI,WAAR;AAAqBQ,MAAAA,MAAM,EAAE,SAA7B;AAAwCC,MAAAA,KAAK,EAAE;AAACL,QAAAA,SAAS,EAAEH;AAAZ;AAA/C,KAAX;;AAEA,QAAIL,KAAK,KAAK,QAAd,EAAwB;AACtB,UAAIK,IAAI,CAAC,CAAD,CAAJ,KAAY,KAAhB,EAAuB;AACrB;AACAI,QAAAA,GAAG,GACD,wBAAwBb,KAAK,CAACc,QAAN,CAAeL,IAAI,CAACC,KAAL,CAAW,CAAX,CAAf,EAA8B,GAA9B,KAAsC,gBAA9D,CADF;AAEAK,QAAAA,IAAI,CAACE,KAAL,CAAWL,SAAX,GAAuBH,IAAI,CAACC,KAAL,CAAW,CAAX,CAAvB;AACAL,QAAAA,QAAQ,IAAIA,QAAQ,CAACQ,GAAD,EAAME,IAAN,CAApB;AACD;AACF,KARD,MAQO;AACLV,MAAAA,QAAQ,IAAIA,QAAQ,CAACQ,GAAD,EAAME,IAAN,CAApB;AACD,KAhByB,CAkB1B;;;AACA,QAAIT,oBAAJ,EAA0B;AACxB;AACA;AACAY,MAAAA,QAAQ,CAACC,SAAT,CAAmBC,KAAnB,CAAyBT,IAAzB,CAA8BL,oBAA9B,EAAoDC,eAApD,EAAqEE,IAArE;AACD;AACF,GAxBD;AAyBD,CAnCD;;AAqCAY,MAAM,CAACC,OAAP,GAAiB;AACfpB,EAAAA,UAAU,EAAEA;AADG,CAAjB","sourcesContent":["var utils = require('./utils');\n\nvar wrapMethod = function(console, level, callback) {\n  var originalConsoleLevel = console[level];\n  var originalConsole = console;\n\n  if (!(level in console)) {\n    return;\n  }\n\n  var sentryLevel = level === 'warn' ? 'warning' : level;\n\n  console[level] = function() {\n    var args = [].slice.call(arguments);\n\n    var msg = utils.safeJoin(args, ' ');\n    var data = {level: sentryLevel, logger: 'console', extra: {arguments: args}};\n\n    if (level === 'assert') {\n      if (args[0] === false) {\n        // Default browsers message\n        msg =\n          'Assertion failed: ' + (utils.safeJoin(args.slice(1), ' ') || 'console.assert');\n        data.extra.arguments = args.slice(1);\n        callback && callback(msg, data);\n      }\n    } else {\n      callback && callback(msg, data);\n    }\n\n    // this fails for some browsers. :(\n    if (originalConsoleLevel) {\n      // IE9 doesn't allow calling apply on console functions directly\n      // See: https://stackoverflow.com/questions/5472938/does-ie9-support-console-log-and-is-it-a-real-function#answer-5473193\n      Function.prototype.apply.call(originalConsoleLevel, originalConsole, args);\n    }\n  };\n};\n\nmodule.exports = {\n  wrapMethod: wrapMethod\n};\n"]},"metadata":{},"sourceType":"script"}