{"ast":null,"code":"var _jsxFileName = \"/Users/melikekilic/vidly/src/components/movies.jsx\";\n\n/** @format */\nimport React, { Component } from \"react\";\nimport { getMovies } from \"../components/services/fakeMovieService\";\nimport { render } from \"@testing-library/react\";\nimport MoviesTable from \"./moviesTable\";\nimport Pagination from \"./common/pagination\";\nimport { paginate } from \"../utils/paginate\";\nimport ListGroup from \"./common/listGroup\";\nimport { getGenres } from \"./services/fakeGenreService\";\nimport _ from \"lodash\";\n\nclass Movies extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      pageSize: 4,\n      currentPage: 1,\n      genres: [],\n      sortColumn: {\n        path: \"title\",\n        order: \"asc\"\n      }\n    };\n\n    this.handleDelete = movie => {\n      const movies = this.state.movies.filter(mov => mov._id !== movie._id); //simply pass movies because the key and the value are the same\n\n      this.setState({\n        movies\n      });\n    };\n\n    this.handleLike = movie => {\n      const movies = [...this.state.movies];\n      const index = movies.indexOf(movie);\n      movies[index].liked = !movies[index].liked;\n      this.setState({\n        movies\n      });\n    };\n\n    this.handlePageChange = page => {\n      this.setState({\n        currentPage: page\n      });\n    };\n\n    this.handleGenreSelect = genre => {\n      this.setState({\n        selectedGenre: genre,\n        currentPage: 1\n      });\n    };\n\n    this.handleSort = sortColumn => {\n      this.setState({\n        sortColumn\n      });\n    };\n\n    this.getPagedData = () => {\n      const {\n        pageSize,\n        currentPage,\n        selectedGenre,\n        movies: allMovies,\n        sortColumn\n      } = this.state;\n      const filtered = selectedGenre && selectedGenre._id ? allMovies.filter(m => m.genre._id === selectedGenre._id) : allMovies;\n\n      const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n      const movies = paginate(sorted, currentPage, pageSize);\n      return {\n        totalCount: filtered.length,\n        data: movies\n      };\n    };\n  }\n\n  componentDidMount() {\n    const genres = [{\n      _id: \"\",\n      name: \"All genres\"\n    }, ...getGenres()];\n    this.setState({\n      movies: getMovies(),\n      genres\n    });\n  }\n\n  render() {\n    const {\n      length: count\n    } = this.state.movies;\n    const {\n      pageSize,\n      currentPage,\n      selectedGenre,\n      movies: allMovies,\n      sortColumn\n    } = this.state;\n    if (count === 0) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 29\n      }\n    }, \"There are no movies in the database.\");\n    const {\n      totalCount,\n      data: movies\n    } = this.getPagedData();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ListGroup, {\n      items: this.state.genres,\n      onItemSelect: this.handleGenreSelect,\n      selectedItem: this.state.selectedGenre,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, \" Showing \", totalCount, \" movies in the database.\"), /*#__PURE__*/React.createElement(MoviesTable, {\n      movies: movies,\n      sortColumn: sortColumn,\n      onLike: this.handleLike,\n      onDelete: this.handleDelete,\n      onSort: this.handleSort,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Pagination, {\n      itemsCount: totalCount,\n      pageSize: pageSize,\n      currentPage: currentPage,\n      onPageChange: this.handlePageChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default Movies;","map":{"version":3,"sources":["/Users/melikekilic/vidly/src/components/movies.jsx"],"names":["React","Component","getMovies","render","MoviesTable","Pagination","paginate","ListGroup","getGenres","_","Movies","state","movies","pageSize","currentPage","genres","sortColumn","path","order","handleDelete","movie","filter","mov","_id","setState","handleLike","index","indexOf","liked","handlePageChange","page","handleGenreSelect","genre","selectedGenre","handleSort","getPagedData","allMovies","filtered","m","sorted","orderBy","totalCount","length","data","componentDidMount","name","count"],"mappings":"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","sourcesContent":["/** @format */\n\nimport React, { Component } from \"react\";\nimport { getMovies } from \"../components/services/fakeMovieService\";\nimport { render } from \"@testing-library/react\";\nimport MoviesTable from \"./moviesTable\";\nimport Pagination from \"./common/pagination\";\nimport { paginate } from \"../utils/paginate\";\nimport ListGroup from \"./common/listGroup\";\nimport { getGenres } from \"./services/fakeGenreService\";\nimport _ from \"lodash\";\nclass Movies extends Component {\n  state = {\n    movies: [],\n    pageSize: 4,\n    currentPage: 1,\n    genres: [],\n    sortColumn: { path: \"title\", order: \"asc\" },\n  };\n\n  componentDidMount() {\n    const genres = [{ _id: \"\", name: \"All genres\" }, ...getGenres()];\n    this.setState({ movies: getMovies(), genres });\n  }\n  handleDelete = (movie) => {\n    const movies = this.state.movies.filter((mov) => mov._id !== movie._id);\n    //simply pass movies because the key and the value are the same\n    this.setState({ movies });\n  };\n\n  handleLike = (movie) => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index].liked = !movies[index].liked;\n    this.setState({ movies });\n  };\n\n  handlePageChange = (page) => {\n    this.setState({ currentPage: page });\n  };\n\n  handleGenreSelect = (genre) => {\n    this.setState({ selectedGenre: genre, currentPage: 1 });\n  };\n\n  handleSort = (sortColumn) => {\n    this.setState({ sortColumn });\n  };\n\n  getPagedData = () => {\n    const {\n      pageSize,\n      currentPage,\n      selectedGenre,\n      movies: allMovies,\n      sortColumn,\n    } = this.state;\n    const filtered =\n      selectedGenre && selectedGenre._id\n        ? allMovies.filter((m) => m.genre._id === selectedGenre._id)\n        : allMovies;\n\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n    const movies = paginate(sorted, currentPage, pageSize);\n    return { totalCount: filtered.length, data: movies };\n  };\n  render() {\n    const { length: count } = this.state.movies;\n    const {\n      pageSize,\n      currentPage,\n      selectedGenre,\n      movies: allMovies,\n      sortColumn,\n    } = this.state;\n    if (count === 0) return <p>There are no movies in the database.</p>;\n    const { totalCount, data: movies } = this.getPagedData();\n    return (\n      <div className=\"row\">\n        <div className=\"col-3\">\n          <ListGroup\n            items={this.state.genres}\n            onItemSelect={this.handleGenreSelect}\n            selectedItem={this.state.selectedGenre}\n          />\n        </div>\n        <div className=\"col\">\n          <p> Showing {totalCount} movies in the database.</p>\n          <MoviesTable\n            movies={movies}\n            sortColumn={sortColumn}\n            onLike={this.handleLike}\n            onDelete={this.handleDelete}\n            onSort={this.handleSort}\n          />\n          <Pagination\n            itemsCount={totalCount}\n            pageSize={pageSize}\n            currentPage={currentPage}\n            onPageChange={this.handlePageChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Movies;\n"]},"metadata":{},"sourceType":"module"}