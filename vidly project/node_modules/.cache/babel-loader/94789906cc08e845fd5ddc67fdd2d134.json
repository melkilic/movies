{"ast":null,"code":"var _jsxFileName = \"/Users/melikekilic/vidly/vidly project/src/components/loginForm.jsx\";\n\n/** @format */\nimport React, { Component } from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport auth from \"./services/authService\";\n\nclass LoginForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      /*null and undefined cannot be used as a value of control elements\n        /initialize the properties of your state object, either to an empty string or some value that you get from a server*/\n      account: {\n        username: \"\",\n        password: \"\",\n        errors: {}\n      }\n    };\n    this.schema = {\n      username: Joi.string().required().label(\"Username\"),\n      password: Joi.string().required().label(\"Password\")\n    };\n\n    this.validate = () => {\n      const options = {\n        abortEarly: false\n      };\n      const {\n        error\n      } = Joi.validate(this.state.account, this.schema, options);\n      if (!error) return null;\n      const errors = {};\n\n      for (let item of error.details) errors[item.path[0]] = item.message;\n\n      return errors;\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const errors = this.validate();\n      console.log(errors);\n      this.setState({\n        errors: errors || {}\n      }); // if (errors) return;\n    };\n\n    this.validateProperty = ({\n      name,\n      value\n    }) => {\n      const obj = {\n        [name]: value\n      };\n      const schema = {\n        [name]: this.schema[name]\n      };\n      const {\n        error\n      } = Joi.validate(obj, schema);\n      return error ? error.details[0].message : null;\n    };\n\n    this.handleChange = ({\n      currentTarget: input\n    }) => {\n      const errors = { ...this.state.errors\n      };\n      const errorMessage = this.validateProperty(input);\n      if (errorMessage) errors[input.name] = errorMessage;else delete errors[input.name];\n      const account = { ...this.state.account\n      }; //whenever you are working with the objects dynamically, use the bracket notation instead of the dot notation\n\n      account[input.name] = input.value;\n      this.setState({\n        account,\n        errors\n      });\n    };\n\n    this.doSubmit = async () => {\n      try {\n        const {\n          data\n        } = this.state;\n        await auth.login(data.username, data.password);\n        const {\n          state\n        } = this.props.location;\n        window.location = state ? state.from.pathname : \"/\";\n      } catch (ex) {\n        if (ex.response && ex.response.status === 400) {\n          const errors = { ...this.state.errors\n          };\n          errors.username = ex.response.data;\n          this.setState({\n            errors\n          });\n        }\n      }\n    };\n  }\n\n  render() {\n    const {\n      account,\n      errors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, this.renderInput(\"username\", \"Username\"), this.renderInput(\"password\", \"Password\"), this.renderButton(\"Login\")));\n  }\n\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/melikekilic/vidly/vidly project/src/components/loginForm.jsx"],"names":["React","Component","Joi","Form","auth","LoginForm","state","account","username","password","errors","schema","string","required","label","validate","options","abortEarly","error","item","details","path","message","handleSubmit","e","preventDefault","console","log","setState","validateProperty","name","value","obj","handleChange","currentTarget","input","errorMessage","doSubmit","data","login","props","location","window","from","pathname","ex","response","status","render","renderInput","renderButton"],"mappings":"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","sourcesContent":["/** @format */\n\nimport React, { Component } from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport auth from \"./services/authService\";\n\nclass LoginForm extends Component {\n  state = {\n    /*null and undefined cannot be used as a value of control elements\n      /initialize the properties of your state object, either to an empty string or some value that you get from a server*/\n    account: {\n      username: \"\",\n      password: \"\",\n      errors: {},\n    },\n  };\n\n  schema = {\n    username: Joi.string().required().label(\"Username\"),\n    password: Joi.string().required().label(\"Password\"),\n  };\n\n  validate = () => {\n    const options = { abortEarly: false };\n    const { error } = Joi.validate(this.state.account, this.schema, options);\n    if (!error) return null;\n    const errors = {};\n    for (let item of error.details) errors[item.path[0]] = item.message;\n    return errors;\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const errors = this.validate();\n    console.log(errors);\n    this.setState({ errors: errors || {} });\n    // if (errors) return;\n  };\n\n  validateProperty = ({ name, value }) => {\n    const obj = { [name]: value };\n    const schema = { [name]: this.schema[name] };\n    const { error } = Joi.validate(obj, schema);\n    return error ? error.details[0].message : null;\n  };\n  handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n    const account = {\n      ...this.state.account,\n    };\n    //whenever you are working with the objects dynamically, use the bracket notation instead of the dot notation\n    account[input.name] = input.value;\n    this.setState({ account, errors });\n  };\n\n  doSubmit = async () => {\n    try {\n      const { data } = this.state;\n      await auth.login(data.username, data.password);\n\n      const { state } = this.props.location;\n      window.location = state ? state.from.pathname : \"/\";\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        const errors = { ...this.state.errors };\n        errors.username = ex.response.data;\n        this.setState({ errors });\n      }\n    }\n  };\n  render() {\n    const { account, errors } = this.state;\n\n    return (\n      <div>\n        <h1>Login</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"username\", \"Username\")}\n          {this.renderInput(\"password\", \"Password\")}\n          {this.renderButton(\"Login\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}