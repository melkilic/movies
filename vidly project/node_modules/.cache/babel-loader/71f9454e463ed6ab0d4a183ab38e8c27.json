{"ast":null,"code":"/** @format */\n// import http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\nimport jwtDeconde from \"jwt-decode\";\nconst apiEndpoint = apiUrl + \"/auth\";\nconst tokenKey = \"token\";\nhttp.setJwt(getJwt());\nexport async function login(email, password) {\n  const {\n    data: jwt\n  } = await http.post(apiEndpoint, {\n    email,\n    password\n  });\n  localStorage.setItem(tokenKey, jwt);\n}\nexport function logout() {\n  localStorage.removeItem(tokenKey);\n}\nexport function loginWithJwt(jwt) {\n  localStorage.setItem(tokenKey, jwt);\n}\nexport function getCurrentUser() {\n  try {\n    const jwt = localStorage.getItem(tokenKey);\n    return jwtDeconde(jwt);\n  } catch (ex) {\n    return null;\n  }\n}\nexport function getJwt() {\n  return localStorage.getItem(tokenKey);\n}\nexport default {\n  login,\n  logout,\n  getCurrentUser,\n  loginWithJwt,\n  getJwt\n};","map":{"version":3,"sources":["/Users/melikekilic/vidly/src/components/services/authService.jsx"],"names":["apiUrl","jwtDeconde","apiEndpoint","tokenKey","http","setJwt","getJwt","login","email","password","data","jwt","post","localStorage","setItem","logout","removeItem","loginWithJwt","getCurrentUser","getItem","ex"],"mappings":"AAAA;AAEA;AACA,SAASA,MAAT,QAAuB,gBAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,MAAMC,WAAW,GAAGF,MAAM,GAAG,OAA7B;AACA,MAAMG,QAAQ,GAAG,OAAjB;AAEAC,IAAI,CAACC,MAAL,CAAYC,MAAM,EAAlB;AAEA,OAAO,eAAeC,KAAf,CAAqBC,KAArB,EAA4BC,QAA5B,EAAsC;AAC3C,QAAM;AAAEC,IAAAA,IAAI,EAAEC;AAAR,MAAgB,MAAMP,IAAI,CAACQ,IAAL,CAAUV,WAAV,EAAuB;AAAEM,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAvB,CAA5B;AACAI,EAAAA,YAAY,CAACC,OAAb,CAAqBX,QAArB,EAA+BQ,GAA/B;AACD;AAED,OAAO,SAASI,MAAT,GAAkB;AACvBF,EAAAA,YAAY,CAACG,UAAb,CAAwBb,QAAxB;AACD;AAED,OAAO,SAASc,YAAT,CAAsBN,GAAtB,EAA2B;AAChCE,EAAAA,YAAY,CAACC,OAAb,CAAqBX,QAArB,EAA+BQ,GAA/B;AACD;AAED,OAAO,SAASO,cAAT,GAA0B;AAC/B,MAAI;AACF,UAAMP,GAAG,GAAGE,YAAY,CAACM,OAAb,CAAqBhB,QAArB,CAAZ;AACA,WAAOF,UAAU,CAACU,GAAD,CAAjB;AACD,GAHD,CAGE,OAAOS,EAAP,EAAW;AACX,WAAO,IAAP;AACD;AACF;AAED,OAAO,SAASd,MAAT,GAAkB;AACvB,SAAOO,YAAY,CAACM,OAAb,CAAqBhB,QAArB,CAAP;AACD;AAED,eAAe;AACbI,EAAAA,KADa;AAEbQ,EAAAA,MAFa;AAGbG,EAAAA,cAHa;AAIbD,EAAAA,YAJa;AAKbX,EAAAA;AALa,CAAf","sourcesContent":["/** @format */\n\n// import http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\nimport jwtDeconde from \"jwt-decode\";\n\nconst apiEndpoint = apiUrl + \"/auth\";\nconst tokenKey = \"token\";\n\nhttp.setJwt(getJwt());\n\nexport async function login(email, password) {\n  const { data: jwt } = await http.post(apiEndpoint, { email, password });\n  localStorage.setItem(tokenKey, jwt);\n}\n\nexport function logout() {\n  localStorage.removeItem(tokenKey);\n}\n\nexport function loginWithJwt(jwt) {\n  localStorage.setItem(tokenKey, jwt);\n}\n\nexport function getCurrentUser() {\n  try {\n    const jwt = localStorage.getItem(tokenKey);\n    return jwtDeconde(jwt);\n  } catch (ex) {\n    return null;\n  }\n}\n\nexport function getJwt() {\n  return localStorage.getItem(tokenKey);\n}\n\nexport default {\n  login,\n  logout,\n  getCurrentUser,\n  loginWithJwt,\n  getJwt,\n};\n"]},"metadata":{},"sourceType":"module"}