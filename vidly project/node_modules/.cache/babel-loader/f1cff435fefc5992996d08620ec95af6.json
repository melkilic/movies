{"ast":null,"code":"var _jsxFileName = \"/Users/melikekilic/vidly/src/components/loginForm.jsx\";\n\n/** @format */\nimport React, { Component } from \"react\";\nimport Input from \"./common/input\";\n\nclass LoginForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      /*null and undefined cannot be used as a value of control elements\n        /initialize the properties of your state object, either to an empty string or some value that you get from a server*/\n      account: {\n        username: \"\",\n        password: \"\",\n        errors: {\n          username: \"Username is required\"\n        }\n      }\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const username = this.username.current.value;\n      console.log(\"submitted\");\n    };\n\n    this.handleChange = ({\n      currentTarget: input\n    }) => {\n      const account = { ...this.state.account\n      }; //whenever you are working with the objects dynamically, use the bracket notation instead of the dot notation\n\n      account[input.name] = input.value;\n      this.setState({\n        account\n      });\n    };\n  }\n\n  render() {\n    const {\n      account\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      name: \"username\",\n      value: account.username,\n      label: \"Username\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      name: \"password\",\n      value: account.password,\n      label: \"Password\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, \"Login\")));\n  }\n\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/melikekilic/vidly/src/components/loginForm.jsx"],"names":["React","Component","Input","LoginForm","state","account","username","password","errors","handleSubmit","e","preventDefault","current","value","console","log","handleChange","currentTarget","input","name","setState","render"],"mappings":";;AAAA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AAEA,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCG,KADgC,GACxB;AACN;;AAEAC,MAAAA,OAAO,EAAE;AACPC,QAAAA,QAAQ,EAAE,EADH;AAEPC,QAAAA,QAAQ,EAAE,EAFH;AAGPC,QAAAA,MAAM,EAAE;AACNF,UAAAA,QAAQ,EAAE;AADJ;AAHD;AAHH,KADwB;;AAAA,SAYhCG,YAZgC,GAYhBC,CAAD,IAAO;AACpBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAML,QAAQ,GAAG,KAAKA,QAAL,CAAcM,OAAd,CAAsBC,KAAvC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD,KAhB+B;;AAAA,SAiBhCC,YAjBgC,GAiBjB,CAAC;AAAEC,MAAAA,aAAa,EAAEC;AAAjB,KAAD,KAA8B;AAC3C,YAAMb,OAAO,GAAG,EACd,GAAG,KAAKD,KAAL,CAAWC;AADA,OAAhB,CAD2C,CAI3C;;AACAA,MAAAA,OAAO,CAACa,KAAK,CAACC,IAAP,CAAP,GAAsBD,KAAK,CAACL,KAA5B;AACA,WAAKO,QAAL,CAAc;AAAEf,QAAAA;AAAF,OAAd;AACD,KAxB+B;AAAA;;AAyBhCgB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEhB,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAM,MAAA,QAAQ,EAAE,KAAKK,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,KAAK,EAAEJ,OAAO,CAACC,QAFjB;AAGE,MAAA,KAAK,EAAC,UAHR;AAIE,MAAA,QAAQ,EAAE,KAAKU,YAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAOE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,KAAK,EAAEX,OAAO,CAACE,QAFjB;AAGE,MAAA,KAAK,EAAC,UAHR;AAIE,MAAA,QAAQ,EAAE,KAAKS,YAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,eAcE;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAdF,CAFF,CADF;AAqBD;;AAhD+B;;AAmDlC,eAAeb,SAAf","sourcesContent":["/** @format */\n\nimport React, { Component } from \"react\";\nimport Input from \"./common/input\";\n\nclass LoginForm extends Component {\n  state = {\n    /*null and undefined cannot be used as a value of control elements\n      /initialize the properties of your state object, either to an empty string or some value that you get from a server*/\n    account: {\n      username: \"\",\n      password: \"\",\n      errors: {\n        username: \"Username is required\",\n      },\n    },\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const username = this.username.current.value;\n    console.log(\"submitted\");\n  };\n  handleChange = ({ currentTarget: input }) => {\n    const account = {\n      ...this.state.account,\n    };\n    //whenever you are working with the objects dynamically, use the bracket notation instead of the dot notation\n    account[input.name] = input.value;\n    this.setState({ account });\n  };\n  render() {\n    const { account } = this.state;\n    return (\n      <div>\n        <h1>Login</h1>\n        <form onSubmit={this.handleSubmit}>\n          <Input\n            name=\"username\"\n            value={account.username}\n            label=\"Username\"\n            onChange={this.handleChange}\n          />\n          <Input\n            name=\"password\"\n            value={account.password}\n            label=\"Password\"\n            onChange={this.handleChange}\n          />\n\n          <button className=\"btn btn-primary\">Login</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}