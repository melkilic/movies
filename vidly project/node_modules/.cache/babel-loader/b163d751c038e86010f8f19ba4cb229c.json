{"ast":null,"code":"var _jsxFileName = \"/Users/melikekilic/vidly/vidly project/src/components/movies.jsx\";\n\n/** @format */\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getMovies, deleteMovie } from \"./services/movieService\";\nimport Pagination from \"./common/pagination\";\nimport { paginate } from \"../utils/paginate\";\nimport ListGroup from \"./common/listGroup\";\nimport MoviesTable from \"./moviesTable\";\nimport SearchBox from \"./searchBox\";\nimport _ from \"lodash\";\nimport getGenres from \"./services/genreService\";\nimport { toast } from \"react-toastify\";\n\nclass Movies extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      genres: [],\n      pageSize: 19,\n      currentPage: 1,\n      searchQuery: null,\n      selectedGenre: null,\n      sortColumn: {\n        path: \"title\",\n        order: \"asc\"\n      }\n    };\n\n    this.handleDelete = async movie => {\n      const originalMovies = this.state.movies;\n      const movies = originalMovies.filter(m => m._id !== movie._id);\n      this.setState({\n        movies\n      });\n\n      try {\n        await deleteMovie(movie._id);\n      } catch (ex) {\n        if (ex.response && ex.response.status === 404) toast.error(\"This movie has already been deleted\");\n        this.setState({\n          movies: originalMovies\n        });\n      }\n    };\n\n    this.handleLike = movie => {\n      const movies = [...this.state.movies];\n      const index = movies.indexOf(movie);\n      movies[index] = { ...movies[index]\n      };\n      movies[index].liked = !movies[index.liked];\n      this.setState({\n        movies\n      });\n    };\n\n    this.handlePageChange = page => {\n      this.setState({\n        currentPage: page\n      });\n    };\n\n    this.handleGenreselect = genre => {\n      this.setState({\n        selectedGenre: genre,\n        searchQuery: \"\",\n        currentPage: 1\n      });\n    };\n\n    this.handleSort = sortColumn => {\n      this.setState({\n        sortColumn\n      });\n    };\n\n    this.handleSearch = query => {\n      this.setState({\n        searchQuery: query,\n        selectedGenre: null,\n        currentPage: 1\n      });\n    };\n\n    this.getPagedData = () => {\n      const {\n        pageSize,\n        currentPage,\n        movies: allMovies,\n        selectedGenre,\n        searchQuery,\n        sortColumn\n      } = this.state;\n      let filtered = allMovies;\n      if (searchQuery) filtered = allMovies.filter(m => m.title.toLowerCase().startsWith(searchQuery.toLowerCase()));else if (selectedGenre && selectedGenre._id) filtered = allMovies.filter(m => m.genre._id === selectedGenre._id);\n\n      const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n      const movies = paginate(sorted, currentPage, pageSize);\n      return {\n        totalCount: filtered.length,\n        data: movies\n      };\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      data\n    } = await getGenres();\n    const genres = [{\n      _id: \"\",\n      name: \"All Genres\"\n    }, ...data];\n    const {\n      data: movies\n    } = await getMovies();\n    this.setState({\n      movies,\n      genres\n    });\n  }\n\n  render() {\n    const {\n      length: count\n    } = this.state.movies;\n    const {\n      pageSize,\n      currentPage,\n      sortColumn\n    } = this.state;\n    const {\n      user\n    } = this.props;\n    if (count === 0) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 29\n      }\n    }, \"There are no movies in the database.\");\n    const {\n      totalCount,\n      data: movies,\n      searchQuery\n    } = this.getPagedData();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ListGroup, {\n      items: this.state.genres,\n      selectedItem: this.state.selectedGenre,\n      onItemSelect: this.handleGenreselect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }, user && /*#__PURE__*/React.createElement(Link, {\n      to: \"/movies/new\",\n      className: \"btn btn-primary\",\n      style: {\n        marginBottom: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, \"New Movie\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    }, \"Showing \", totalCount, \" movies in the database\"), /*#__PURE__*/React.createElement(SearchBox, {\n      value: searchQuery,\n      onChange: this.handleSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(MoviesTable, {\n      movies: movies,\n      sortColumn: sortColumn,\n      onLike: this.handleLike,\n      onDelete: this.handleDelete,\n      onSort: this.handleSort,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Pagination, {\n      itemsCount: totalCount,\n      pageSize: pageSize,\n      onPageChange: this.handlePageChange,\n      currentPage: currentPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default Movies;","map":{"version":3,"sources":["/Users/melikekilic/vidly/vidly project/src/components/movies.jsx"],"names":["React","Component","Link","getMovies","deleteMovie","Pagination","paginate","ListGroup","MoviesTable","SearchBox","_","getGenres","toast","Movies","state","movies","genres","pageSize","currentPage","searchQuery","selectedGenre","sortColumn","path","order","handleDelete","movie","originalMovies","filter","m","_id","setState","ex","response","status","error","handleLike","index","indexOf","liked","handlePageChange","page","handleGenreselect","genre","handleSort","handleSearch","query","getPagedData","allMovies","filtered","title","toLowerCase","startsWith","sorted","orderBy","totalCount","length","data","componentDidMount","name","render","count","user","props","marginBottom"],"mappings":"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","sourcesContent":["/** @format */\n\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getMovies, deleteMovie } from \"./services/movieService\";\nimport Pagination from \"./common/pagination\";\nimport { paginate } from \"../utils/paginate\";\nimport ListGroup from \"./common/listGroup\";\nimport MoviesTable from \"./moviesTable\";\nimport SearchBox from \"./searchBox\";\nimport _ from \"lodash\";\nimport getGenres from \"./services/genreService\";\nimport { toast } from \"react-toastify\";\n\nclass Movies extends Component {\n  state = {\n    movies: [],\n    genres: [],\n    pageSize: 19,\n    currentPage: 1,\n    searchQuery: null,\n    selectedGenre: null,\n    sortColumn: { path: \"title\", order: \"asc\" },\n  };\n\n  async componentDidMount() {\n    const { data } = await getGenres();\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...data];\n    const { data: movies } = await getMovies();\n    this.setState({ movies, genres });\n  }\n\n  handleDelete = async (movie) => {\n    const originalMovies = this.state.movies;\n    const movies = originalMovies.filter((m) => m._id !== movie._id);\n    this.setState({ movies });\n\n    try {\n      await deleteMovie(movie._id);\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404)\n        toast.error(\"This movie has already been deleted\");\n\n      this.setState({ movies: originalMovies });\n    }\n  };\n\n  handleLike = (movie) => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movies[index] };\n    movies[index].liked = !movies[index.liked];\n    this.setState({ movies });\n  };\n\n  handlePageChange = (page) => {\n    this.setState({ currentPage: page });\n  };\n\n  handleGenreselect = (genre) => {\n    this.setState({ selectedGenre: genre, searchQuery: \"\", currentPage: 1 });\n  };\n\n  handleSort = (sortColumn) => {\n    this.setState({ sortColumn });\n  };\n\n  handleSearch = (query) => {\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\n  };\n\n  getPagedData = () => {\n    const {\n      pageSize,\n      currentPage,\n      movies: allMovies,\n      selectedGenre,\n      searchQuery,\n      sortColumn,\n    } = this.state;\n\n    let filtered = allMovies;\n\n    if (searchQuery)\n      filtered = allMovies.filter((m) =>\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\n      );\n    else if (selectedGenre && selectedGenre._id)\n      filtered = allMovies.filter((m) => m.genre._id === selectedGenre._id);\n\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n    const movies = paginate(sorted, currentPage, pageSize);\n\n    return { totalCount: filtered.length, data: movies };\n  };\n\n  render() {\n    const { length: count } = this.state.movies;\n    const { pageSize, currentPage, sortColumn } = this.state;\n    const { user } = this.props;\n\n    if (count === 0) return <p>There are no movies in the database.</p>;\n\n    const { totalCount, data: movies, searchQuery } = this.getPagedData();\n    return (\n      <div className=\"row\">\n        <div className=\"col-2\">\n          <ListGroup\n            items={this.state.genres}\n            selectedItem={this.state.selectedGenre}\n            onItemSelect={this.handleGenreselect}\n          />\n        </div>\n\n        <div className=\"col\">\n          {user && (\n            <Link\n              to=\"/movies/new\"\n              className=\"btn btn-primary\"\n              style={{ marginBottom: 20 }}\n            >\n              New Movie\n            </Link>\n          )}\n          <p>Showing {totalCount} movies in the database</p>\n          <SearchBox value={searchQuery} onChange={this.handleSearch} />\n          <MoviesTable\n            movies={movies}\n            sortColumn={sortColumn}\n            onLike={this.handleLike}\n            onDelete={this.handleDelete}\n            onSort={this.handleSort}\n          />\n          <Pagination\n            itemsCount={totalCount}\n            pageSize={pageSize}\n            onPageChange={this.handlePageChange}\n            currentPage={currentPage}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Movies;\n"]},"metadata":{},"sourceType":"module"}